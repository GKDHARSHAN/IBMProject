pipeline {
    agent any
    environment {
        JIRA_SITE = 'jenkins-jira'  
        JIRA_ISSUE = 'MJP-1'
        SLACK_CHANNEL = '#general' 
        SLACK_COLOR_SUCCESS = 'good'
        SLACK_COLOR_FAILURE = 'danger'
        IMAGE_NAME = 'my-container-image'
        CONTAINER_PORT = '8080'
        K8S_DEPLOYMENT_FILE = 'kubernetes-deployment.yaml'
    }
    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Building the project...'
                    sh 'docker build -t $IMAGE_NAME .'
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                }
            }
        }
        stage('Push to Local Docker Registry') {
            steps {
                script {
                    echo 'Tagging and pushing Docker image...'
                    sh 'docker tag $IMAGE_NAME localhost:5000/$IMAGE_NAME'
                    sh 'docker push localhost:5000/$IMAGE_NAME'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    echo 'Deploying to Kubernetes...'
                    sh 'kubectl apply -f $K8S_DEPLOYMENT_FILE'
                    sh 'kubectl rollout status deployment/my-deployment'
                }
            }
        }
        stage('Expose Service in Minikube') {
            steps {
                script {
                    echo 'Exposing service...'
                    sh 'minikube service my-service --url'
                }
            }
        }
    }
    post {
        success {
            script {
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_SUCCESS,
                    message: "✅ Build successful! Build ID: ${env.BUILD_NUMBER}",
                    username: 'jenkins',
                    iconEmoji: ':tada:'
                )
                try {
                    jiraAddComment idOrKey: env.JIRA_ISSUE, comment: "✅ Build Successful! Build ID: ${env.BUILD_NUMBER}"
                    jiraTransitionIssue idOrKey: env.JIRA_ISSUE, transition: "Done"
                    echo "✅ JIRA Issue ${env.JIRA_ISSUE} updated successfully!"
                } catch (Exception e) {
                    echo "❌ JIRA update failed: ${e.getMessage()}"
                }
            }
        }
        failure {
            script {
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_FAILURE,
                    message: "❌ Build failed! Build ID: ${env.BUILD_NUMBER}",
                    username: 'jenkins',
                    iconEmoji: ':no_entry_sign:'
                )
                try {
                    jiraAddComment idOrKey: env.JIRA_ISSUE, comment: "❌ Build Failed! Build ID: ${env.BUILD_NUMBER}"
                    jiraTransitionIssue idOrKey: env.JIRA_ISSUE, transition: "Reopen"
                } catch (Exception e) {
                    echo "❌ JIRA update failed: ${e.getMessage()}"
                }
            }
        }
    }
}
