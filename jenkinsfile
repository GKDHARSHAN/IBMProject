pipeline {
    agent any
    environment {
        IMAGE_NAME = 'myapp:latest'
        CONTAINER_NAME = 'myapp_container'
        DOCKER_REGISTRY = 'docker.io'
        GITHUB_REPO = 'https://github.com/GKDHARSHAN/IBMProject.git'
    }
    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'üî® Building the project...'
                // Add build commands here, like mvn, gradle, etc.
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Running tests...'
                // Add test commands here, like unit tests or integration tests
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'üê≥ Building Docker Image...'
                    bat "docker build -t ${IMAGE_NAME} ."
                }
            }
        }

        stage('Run Docker Containers') {
            steps {
                script {
                    echo 'üõë Stopping existing containers (if any)...'
                    def containerId = bat(script: "docker ps -q --filter name=${CONTAINER_NAME}", returnStdout: true).trim()

                    if (containerId) {
                        echo 'Stopping and removing existing container...'
                        bat "docker stop ${containerId}"
                        bat "docker rm ${containerId}"
                    } else {
                        echo "No running container to stop"
                    }

                    echo 'Starting new container...'
                    bat "docker run -d --name ${CONTAINER_NAME} -p 8000:8000 ${IMAGE_NAME}"
                }
            }
        }

        stage('Post Actions') {
            steps {
                script {
                    slackSend(channel: '#general', color: 'danger', message: '‚ùå Build Failed! ‚ö†Ô∏è')
                    jiraAddComment(issueKey: 'MJP-1', comment: '‚ùå Build Failed! ‚ö†Ô∏è\n*Build ID:* 125')
                }
            }
        }
    }
    post {
        failure {
            echo 'Build failed!'
            // Any additional failure handling like notifying via Slack or email
        }
    }
}
