pipeline {
    agent any
    environment {
        SLACK_CHANNEL = '#general'
        SLACK_COLOR_SUCCESS = 'good'
        SLACK_COLOR_FAILURE = 'danger'
        JIRA_SITE = 'jenkins-jira'
    }
    stages {
        stage('Extract Jira Issue Key') {
            steps {
                script {
                    // Extract branch name from Jenkins environment variable
                    def branchName = env.GIT_BRANCH ?: 'unknown'
                    def jiraIssue = ''
                    
                    if (branchName) {
                        def matcher = (branchName =~ /(SMS-[0-9]+)/)  // Regex to extract Jira issue key
                        jiraIssue = matcher ? matcher[0][0] : ''
                    }
                    
                    env.JIRA_ISSUE = jiraIssue
                    echo "Extracted JIRA Issue Key: ${env.JIRA_ISSUE}"
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    echo 'Building the project...'
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                }
            }
        }
    }
    post {
        success {
            script {
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_SUCCESS,
                    message: "✅ Build successful! Build ID: ${env.BUILD_NUMBER}",
                    username: 'jenkins',
                    iconEmoji: ':tada:'
                )
                try {
                    if (env.JIRA_ISSUE) {
                        echo "Updating Jira issue: ${env.JIRA_ISSUE}"
                        jiraAddComment(issueKey: env.JIRA_ISSUE, comment: "✅ Build Successful! Build ID: ${env.BUILD_NUMBER}")
                        jiraTransitionIssue(issueKey: env.JIRA_ISSUE, transition: "Done")
                    } else {
                        echo "No JIRA issue key extracted, skipping Jira update."
                    }
                } catch (Exception e) {
                    echo "Jira update failed: ${e.getMessage()}"
                }
            }
        }
        failure {
            script {
                try {
                    slackSend (
                        channel: env.SLACK_CHANNEL,
                        color: env.SLACK_COLOR_FAILURE,
                        message: "❌ Build failed! Build ID: ${env.BUILD_NUMBER}",
                        username: 'jenkins',
                        iconEmoji: ':no_entry_sign:'
                    )
                    if (env.JIRA_ISSUE) {
                        echo "Updating Jira issue: ${env.JIRA_ISSUE} (Failure)"
                        jiraAddComment(issueKey: env.JIRA_ISSUE, comment: "❌ Build Failed! Build ID: ${env.BUILD_NUMBER}")
                        jiraTransitionIssue(issueKey: env.JIRA_ISSUE, transition: "Reopen")
                    } else {
                        echo "No JIRA issue key extracted, skipping Jira update."
                    }
                } catch (Exception e) {
                    echo "Error during failure handling: ${e.getMessage()}"
                }
            }
        }
    }
}
