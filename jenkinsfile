pipeline {
    agent any

    environment {
        CONTAINER_NAME = "myapp_container"
        IMAGE_NAME = "myapp:latest"
        JIRA_ISSUE_ID = "MJP-1" // Replace with your actual JIRA issue key
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    try {
                        checkout scm
                    } catch (Exception e) {
                        echo "‚ùå Checkout failed: ${e.message}"
                        currentBuild.result = 'FAILURE'
                        error("Stopping pipeline due to checkout failure")
                    }
                }
            }
        }

        stage('Build') {
            steps {
                echo 'üî® Building the project...'
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Running tests...'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'üê≥ Building Docker Image...'
                    bat "docker build -t ${IMAGE_NAME} ."
                }
            }
        }

        stage('Run Docker Containers') {
            steps {
                script {
                    echo 'üõë Stopping existing containers (if any)...'
                    def containerId = bat(script: "docker ps -q --filter 'name=${CONTAINER_NAME}'", returnStdout: true).trim()

                    if (containerId) {
                        bat "docker stop ${CONTAINER_NAME}"
                        bat "docker rm ${CONTAINER_NAME}"
                    } else {
                        echo "‚ÑπÔ∏è No running container found."
                    }

                    echo 'üöÄ Starting new container...'
                    bat "docker run -d --name ${CONTAINER_NAME} -p 8000:8000 ${IMAGE_NAME}"
                }
            }
        }
    }

    post {
        success {
            script {
                slackSend(
                    channel: '#general',
                    color: 'good',
                    message: "‚úÖ *Build Successful!* üéâ\n*Build ID:* ${env.BUILD_ID}",
                    teamDomain: 'ibmproject-hq',
                    tokenCredentialId: 'slack'
                )

                jiraAddComment(
                    site: 'jenkins-jira',
                    idOrKey: JIRA_ISSUE_ID,
                    comment: "‚úÖ Build Successful! üöÄ\n*Build ID:* ${env.BUILD_ID}"
                )

                jiraTransitionIssue(
                    site: 'jenkins-jira',
                    idOrKey: JIRA_ISSUE_ID,
                    transitionId: '21' // Update with actual transition ID
                )
            }
        }

        failure {
            script {
                slackSend(
                    channel: '#general',
                    color: 'danger',
                    message: "‚ùå *Build Failed!* üö®\n*Build ID:* ${env.BUILD_ID}",
                    teamDomain: 'ibmproject-hq',
                    tokenCredentialId: 'slack'
                )

                jiraAddComment(
                    site: 'jenkins-jira',
                    idOrKey: JIRA_ISSUE_ID,
                    comment: "‚ùå Build Failed! ‚ö†Ô∏è\n*Build ID:* ${env.BUILD_ID}"
                )
            }
        }
    }
}
