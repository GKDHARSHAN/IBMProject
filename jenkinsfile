pipeline {
    agent any
    
    environment {
        SLACK_CHANNEL = '#general'
        SLACK_COLOR_SUCCESS = 'good'
        SLACK_COLOR_FAILURE = 'danger'
        JIRA_SITE = 'jenkins-jira'  // Change this to your Jira site name
        JIRA_ISSUE = 'SMS-7'  // Manually setting JIRA Issue Key since branch name does not contain it
    }

    stages {
        stage('Extract JIRA Issue Key') {
            steps {
                script {
                    echo "JIRA Issue Key: ${env.JIRA_ISSUE}"
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    echo 'Building the project...'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                }
            }
        }
    }

    post {
        success {
            script {
                def jiraLink = env.JIRA_ISSUE ? "<https://your-jira-instance/browse/${env.JIRA_ISSUE}|${env.JIRA_ISSUE}>" : "No JIRA issue linked"
                
                // ‚úÖ Send Slack notification
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_SUCCESS,
                    message: "‚úÖ *Build Successful!* \nüî¢ *Build ID:* ${env.BUILD_NUMBER} \nüîó *JIRA:* ${jiraLink} \nüå± *Branch:* ${env.GIT_BRANCH}",
                    username: 'jenkins',
                    iconEmoji: ':tada:'
                )

                try {
                    if (env.JIRA_ISSUE) {
                        // ‚úÖ Add a comment to JIRA
                        jiraAddComment idOrKey: env.JIRA_ISSUE, comment: "‚úÖ Build Successful! Build ID: ${env.BUILD_NUMBER}"

                        // ‚úÖ Transition JIRA issue to "Done"
                        jiraTransitionIssue idOrKey: env.JIRA_ISSUE, transition: "Done"
                    }
                } catch (Exception e) {
                    echo "JIRA update failed: ${e.getMessage()}"
                }
            }
        }
        
        failure {
            script {
                def jiraLink = env.JIRA_ISSUE ? "<https://your-jira-instance/browse/${env.JIRA_ISSUE}|${env.JIRA_ISSUE}>" : "No JIRA issue linked"
                
                // ‚ùå Send Slack notification
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_FAILURE,
                    message: "‚ùå *Build Failed!* \nüî¢ *Build ID:* ${env.BUILD_NUMBER} \nüîó *JIRA:* ${jiraLink} \nüå± *Branch:* ${env.GIT_BRANCH}",
                    username: 'jenkins',
                    iconEmoji: ':no_entry_sign:'
                )

                try {
                    if (env.JIRA_ISSUE) {
                        // ‚ùå Add a comment to JIRA
                        jiraAddComment idOrKey: env.JIRA_ISSUE, comment: "‚ùå Build Failed! Build ID: ${env.BUILD_NUMBER}"

                        // ‚ùå Transition JIRA issue to "Reopen"
                        jiraTransitionIssue idOrKey: env.JIRA_ISSUE, transition: "Reopen"
                    }
                } catch (Exception e) {
                    echo "JIRA update failed: ${e.getMessage()}"
                }
            }
        }
    }
}
