pipeline {
    agent any

    environment {
        IMAGE_NAME = 'myapp:latest'
        CONTAINER_NAME = 'myapp_container'
        DOCKERFILE_PATH = './Dockerfile'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'üî® Building the project...'
                // Your build steps go here
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Running tests...'
                // Your test steps go here
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'üê≥ Building Docker Image...'
                script {
                    bat '''
                        docker build --no-cache -t ${IMAGE_NAME} ${DOCKERFILE_PATH}
                    '''
                }
            }
        }

        stage('Run Docker Containers') {
            steps {
                echo 'üõë Stopping existing containers (if any)...'
                script {
                    bat '''
                        docker stop ${CONTAINER_NAME} || true
                        docker rm ${CONTAINER_NAME} || true
                    '''
                }

                echo 'üöÄ Running new container...'
                script {
                    bat '''
                        docker run -d --name ${CONTAINER_NAME} ${IMAGE_NAME}
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            script {
                bat '''
                    docker system prune -f
                '''
            }
        }

        success {
            echo 'Build and deployment were successful!'
        }

        failure {
            echo 'Build or deployment failed.'
        }
    }
}
