pipeline {
    agent any
    environment {
        SLACK_CHANNEL = '#general'
        SLACK_COLOR_SUCCESS = 'good'
        SLACK_COLOR_FAILURE = 'danger'
        JIRA_SITE = 'jenkins-jira'
        JIRA_ISSUE = 'SMS-7'  // Replace with your actual JIRA issue key
    }
    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Building the project...'
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                }
            }
        }
    }
    post {
        success {
            script {
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_SUCCESS,
                    message: "✅ Build successful! Build ID: ${env.BUILD_NUMBER}",
                    username: 'jenkins',
                    iconEmoji: ':tada:'
                )
                try {
                    jiraAddComment(issueKey: env.JIRA_ISSUE, comment: "✅ Build Successful! Build ID: ${env.BUILD_NUMBER}")
                    jiraTransitionIssue(issueKey: env.JIRA_ISSUE, transition: "Done")
                } catch (Exception e) {
                    echo "JIRA update failed: ${e.getMessage()}"
                }
            }
        }
        failure {
            script {
                slackSend (
                    channel: env.SLACK_CHANNEL,
                    color: env.SLACK_COLOR_FAILURE,
                    message: "❌ Build failed! Build ID: ${env.BUILD_NUMBER}",
                    username: 'jenkins',
                    iconEmoji: ':no_entry_sign:'
                )
                try {
                    jiraAddComment(issueKey: env.JIRA_ISSUE, comment: "❌ Build Failed! Build ID: ${env.BUILD_NUMBER}")
                    jiraTransitionIssue(issueKey: env.JIRA_ISSUE, transition: "Reopen")
                } catch (Exception e) {
                    echo "JIRA update failed: ${e.getMessage()}"
                }
            }
        }
    }
}
